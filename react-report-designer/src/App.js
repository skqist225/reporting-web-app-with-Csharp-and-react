import React, { useEffect, useState } from 'react';
import ko from 'knockout';
import ListTableName from './components/ListTableName';
import { useDispatch, useSelector } from 'react-redux';
import { fetchTableNames } from './features/databaseSlice';

import 'devexpress-reporting/dx-reportdesigner';
import './App.css';
import { Fab, TextareaAutosize } from '@mui/material';

import MyDraggableComp from './components/MyDraggableComp';
import ConditionArray from './components/ConditionArray';
import { useFieldArray, useForm } from 'react-hook-form';
import NavigationIcon from '@mui/icons-material/Navigation';

class ReportViewer extends React.Component {
    constructor(props) {
        super(props);
        this.reportUrl = ko.observable(
            `QLDSV_HTC?query=${this.props.query || 'SELECT * FROM SINHVIEN'}`
        );
        this.requestOptions = {
            host: 'https://localhost:44322/',
            invokeAction: '/WebDocumentViewer/Invoke',
        };
    }

    render() {
        return <div id='documentViewerContainer' data-bind='dxReportViewer: $data'></div>;
    }
    componentDidMount() {
        ko.applyBindings(
            {
                reportUrl: this.reportUrl,
                requestOptions: this.requestOptions,
            },
            document.querySelector('#documentViewerContainer')
        );
    }
    componentWillUnmount() {
        ko.cleanNode(document.querySelector('#documentViewerContainer'));
    }
}

function App() {
    const dispatch = useDispatch();
    const [query, setQuery] = useState('');
    const { tableNames, tables } = useSelector(state => state.database);
    const { control, register } = useForm();
    const { fields, append, prepend, remove, swap, move, insert } = useFieldArray({
        control, // control props comes from useForm (optional: if you are using FormContext)
        name: 'test', // unique name for your Field Array
    });

    useEffect(async () => {
        dispatch(fetchTableNames());
    }, []);

    function printReport() {
        document.querySelector('#editQuery').setAttribute('style', 'display: none !imporant');
        document.querySelector('#report').setAttribute('style', 'display: block !imporant');
    }

    return (
        <main>
            <div id='editQuery' style={{ display: 'block' }}>
                <div className='' style={{ position: 'relative' }}>
                    <TextareaAutosize
                        aria-label='minimum height'
                        minRows={5}
                        placeholder='AUTOGENERATED QUERY'
                        style={{
                            width: '100%',
                            fontSize: '16px',
                            border: '2px solid paleblue',
                            borderRadius: '8px',
                        }}
                        defaultValue={query}
                        readOnly
                    />
                    <div style={{ position: 'absolute', top: '0', right: '0' }}>
                        <Fab
                            variant='extended'
                            color='primary'
                            aria-label='add'
                            onClick={printReport}
                        >
                            <NavigationIcon sx={{ mr: 1 }} />
                            In báo cáo
                        </Fab>
                    </div>
                </div>
                <div style={{ height: '269px', overflowY: 'scroll' }}>
                    <ConditionArray fields={fields} register={register} setQuery={setQuery} />
                </div>
                <div className='normal-flex' style={{ height: '100%' }}>
                    <div>{tableNames && <ListTableName tableNames={tableNames} />}</div>
                    <article
                        className='flex'
                        style={{
                            boxShadow: 'rgb(0 0 0 / 28%) 0px 8px 28px',
                            height: '500px',
                            width: '100%',
                            border: '1px solid red',
                        }}
                    >
                        {/* <Table /> */}

                        <div className='normal-flex'>
                            {tables.map(table => (
                                <MyDraggableComp
                                    table={table}
                                    key={table.tableName}
                                    append={append}
                                    remove={remove}
                                    setQuery={setQuery}
                                />
                            ))}
                        </div>
                    </article>
                </div>
            </div>

            <div style={{ display: 'none' }} id='report'>
                <ReportViewer query={query} />
            </div>
        </main>
    );
}

export default App;
